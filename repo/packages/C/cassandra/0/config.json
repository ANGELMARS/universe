{
  "type": "object",
  "properties": {
    "mesos/master": {
      "description": "The URL of the Mesos master. The format is a comma-delimited list of hosts like zk://host1:port,host2:port/mesos. If using ZooKeeper, pay particular attention to the leading zk:// and trailing /mesos! If not using ZooKeeper, standard URLs like http://localhost are also acceptable.",
      "type": "string",
      "default": "zk://master.mesos:2181/mesos"
    },

    "framework/failover-timeout-seconds": {
      "description": "The failover_timeout for Mesos in seconds. If the framework instance has not re-registered with Mesos this long after a failover, Mesos will shut down all running tasks started by the framework.",
      "type": "integer",
      "minimum": 0,
      "default": 604800
    },
    "framework/role": {
      "description": "Mesos role for this framework.",
      "type": "string",
      "default": "*"
    },
    "framework/authentication/enabled": {
      "description": "Whether framework authentication should be used",
      "type": "boolean",
      "default": false
    },
    "framework/authentication/principal": {
      "description": "The Mesos principal used for authentication.",
      "type": "string"
    },
    "framework/authentication/secret": {
      "description": "The path to the Mesos secret file containing the authentication secret.",
      "type": "string"
    },

    "cassandra/cluster-name": {
      "description": "The name of the framework to register with mesos. Will also be used as the cluster name in Cassandra",
      "type": "string",
      "default": "dcos"
    },
    "cassandra/zk": {
      "description": "ZooKeeper URL for storing state. Format: zk://host1:port1,host2:port2,.../path (can have nested directories)",
      "type": "string",
      "default": "zk://master.mesos:2181/cassandra-mesos/dcos"
    },
    "cassandra/zk-timeout-ms": {
      "description": "Timeout for ZooKeeper in milliseconds.",
      "type": "integer",
      "minimum": 0,
      "default": 10000
    },
    "cassandra/node-count": {
      "description": "The number of nodes in the ring for the framework to run.",
      "type": "integer",
      "minimum": 1,
      "default": 3
    },
    "cassandra/seed-count": {
      "description": "The number of seed nodes in the ring for the framework to run.",
      "type": "integer",
      "minimum": 1,
      "default": 2
    },
    "cassandra/health-check-interval-seconds": {
      "description": "The interval in seconds that the framework should check the health of each Cassandra Server instance.",
      "type": "integer",
      "minimum": 15,
      "default": 60
    },
    "cassandra/bootstrap-grace-time-seconds": {
      "description": "The minimum number of seconds to wait between starting each node. Setting this too low could result in the ring not bootstrapping correctly.",
      "type": "integer",
      "minimum": 15,
      "default": 120
    },
    "cassandra/data-directory": {
      "description": "The location on disk where Cassandra will be configured to write it's data.",
      "type": "string",
      "default": "."
    },

    "cassandra/resource/cpus": {
      "description": "CPU shares to allocate to each Cassandra Server Instance.",
      "type": "number",
      "minimum": 0.0,
      "default": 0.1
    },
    "cassandra/resource/mem": {
      "description": "Memory (MB) to allocate to each Cassandra Server instance.",
      "type": "integer",
      "minimum": 0,
      "default": 768
    },
    "cassandra/resource/disk": {
      "description": "Disk (MB) to allocate to each Cassandra Server instance.",
      "type": "integer",
      "minimum": 0,
      "default": 16
    },
    "cassandra/resource/heap-mb": {
      "description": "The amount of memory in MB that are allocated to each Cassandra Server Instance. This value should be smaller than 'cassandra/resource/mem' the remaining difference will be used for memory mapped files and other off-heap memory requirements.",
      "type": "integer",
      "minimum": 0
    }
  }
}
